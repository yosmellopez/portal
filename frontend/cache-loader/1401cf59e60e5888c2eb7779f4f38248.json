{"remainingRequest":"C:\\wamp64\\www\\portal\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\wamp64\\www\\portal\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\wamp64\\www\\portal\\frontend\\app\\shared\\auth\\has-any-authority.directive.ts","dependencies":[{"path":"C:\\wamp64\\www\\portal\\frontend\\app\\shared\\auth\\has-any-authority.directive.ts","mtime":1568416781649},{"path":"C:\\wamp64\\www\\portal\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2EsIF9iLCBfYzsNCmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIFRlbXBsYXRlUmVmLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7DQppbXBvcnQgeyBBY2NvdW50U2VydmljZSB9IGZyb20gJ2FwcC9jb3JlL2F1dGgvYWNjb3VudC5zZXJ2aWNlJzsNCi8qKg0KICogQHdoYXRJdERvZXMgQ29uZGl0aW9uYWxseSBpbmNsdWRlcyBhbiBIVE1MIGVsZW1lbnQgaWYgY3VycmVudCB1c2VyIGhhcyBhbnkNCiAqIG9mIHRoZSBhdXRob3JpdGllcyBwYXNzZWQgYXMgdGhlIGBleHByZXNzaW9uYC4NCiAqDQogKiBAaG93VG9Vc2UNCiAqIGBgYA0KICogICAgIDxzb21lLWVsZW1lbnQgKmpoaUhhc0FueUF1dGhvcml0eT0iJ1JPTEVfQURNSU4nIj4uLi48L3NvbWUtZWxlbWVudD4NCiAqDQogKiAgICAgPHNvbWUtZWxlbWVudCAqamhpSGFzQW55QXV0aG9yaXR5PSJbJ1JPTEVfQURNSU4nLCAnUk9MRV9VU0VSJ10iPi4uLjwvc29tZS1lbGVtZW50Pg0KICogYGBgDQogKi8NCmxldCBIYXNBbnlBdXRob3JpdHlEaXJlY3RpdmUgPSBjbGFzcyBIYXNBbnlBdXRob3JpdHlEaXJlY3RpdmUgew0KICAgIGNvbnN0cnVjdG9yKGFjY291bnRTZXJ2aWNlLCB0ZW1wbGF0ZVJlZiwgdmlld0NvbnRhaW5lclJlZikgew0KICAgICAgICB0aGlzLmFjY291bnRTZXJ2aWNlID0gYWNjb3VudFNlcnZpY2U7DQogICAgICAgIHRoaXMudGVtcGxhdGVSZWYgPSB0ZW1wbGF0ZVJlZjsNCiAgICAgICAgdGhpcy52aWV3Q29udGFpbmVyUmVmID0gdmlld0NvbnRhaW5lclJlZjsNCiAgICB9DQogICAgc2V0IGpoaUhhc0FueUF1dGhvcml0eSh2YWx1ZSkgew0KICAgICAgICB0aGlzLmF1dGhvcml0aWVzID0gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IFt2YWx1ZV0gOiB2YWx1ZTsNCiAgICAgICAgdGhpcy51cGRhdGVWaWV3KCk7DQogICAgICAgIC8vIEdldCBub3RpZmllZCBlYWNoIHRpbWUgYXV0aGVudGljYXRpb24gc3RhdGUgY2hhbmdlcy4NCiAgICAgICAgdGhpcy5hY2NvdW50U2VydmljZS5nZXRBdXRoZW50aWNhdGlvblN0YXRlKCkuc3Vic2NyaWJlKGlkZW50aXR5ID0+IHRoaXMudXBkYXRlVmlldygpKTsNCiAgICB9DQogICAgdXBkYXRlVmlldygpIHsNCiAgICAgICAgY29uc3QgaGFzQW55QXV0aG9yaXR5ID0gdGhpcy5hY2NvdW50U2VydmljZS5oYXNBbnlBdXRob3JpdHkodGhpcy5hdXRob3JpdGllcyk7DQogICAgICAgIHRoaXMudmlld0NvbnRhaW5lclJlZi5jbGVhcigpOw0KICAgICAgICBpZiAoaGFzQW55QXV0aG9yaXR5KSB7DQogICAgICAgICAgICB0aGlzLnZpZXdDb250YWluZXJSZWYuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcGxhdGVSZWYpOw0KICAgICAgICB9DQogICAgfQ0KfTsNCnRzbGliXzEuX19kZWNvcmF0ZShbDQogICAgSW5wdXQoKSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjp0eXBlIiwgT2JqZWN0KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW09iamVjdF0pDQpdLCBIYXNBbnlBdXRob3JpdHlEaXJlY3RpdmUucHJvdG90eXBlLCAiamhpSGFzQW55QXV0aG9yaXR5IiwgbnVsbCk7DQpIYXNBbnlBdXRob3JpdHlEaXJlY3RpdmUgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWw0KICAgIERpcmVjdGl2ZSh7DQogICAgICAgIHNlbGVjdG9yOiAnW2poaUhhc0FueUF1dGhvcml0eV0nDQogICAgfSksDQogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIEFjY291bnRTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBBY2NvdW50U2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBUZW1wbGF0ZVJlZiAhPT0gInVuZGVmaW5lZCIgJiYgVGVtcGxhdGVSZWYpID09PSAiZnVuY3Rpb24iID8gX2IgOiBPYmplY3QsIHR5cGVvZiAoX2MgPSB0eXBlb2YgVmlld0NvbnRhaW5lclJlZiAhPT0gInVuZGVmaW5lZCIgJiYgVmlld0NvbnRhaW5lclJlZikgPT09ICJmdW5jdGlvbiIgPyBfYyA6IE9iamVjdF0pDQpdLCBIYXNBbnlBdXRob3JpdHlEaXJlY3RpdmUpOw0KZXhwb3J0IHsgSGFzQW55QXV0aG9yaXR5RGlyZWN0aXZlIH07DQo="},{"version":3,"file":"C:\\wamp64\\www\\portal\\frontend\\app\\shared\\auth\\has-any-authority.directive.ts","sourceRoot":"","sources":["C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\wamp64\\www\\portal\\frontend\\app\\shared\\auth\\has-any-authority.directive.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAE/D;;;;;;;;;;GAUG;AAIH,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAGnC,YAAoB,cAA8B,EAAU,WAA6B,EAAU,gBAAkC;QAAjH,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAkB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAGzI,IAAI,kBAAkB,CAAC,KAAwB;QAC7C,IAAI,CAAC,WAAW,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,uDAAuD;QACvD,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAEO,UAAU;QAChB,MAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9E,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC5D;IACH,CAAC;CACF,CAAA;AAdC;IADC,KAAK,EAAE;;;kEAMP;AAXU,wBAAwB;IAHpC,SAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;KACjC,CAAC;iEAIoC,cAAc,oBAAd,cAAc,oDAAuB,WAAW,oBAAX,WAAW,oDAAiC,gBAAgB,oBAAhB,gBAAgB;GAH1H,wBAAwB,CAoBpC;SApBY,wBAAwB","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { AccountService } from 'app/core/auth/account.service';\n\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\n@Directive({\n  selector: '[jhiHasAnyAuthority]'\n})\nexport class HasAnyAuthorityDirective {\n  private authorities: string[];\n\n  constructor(private accountService: AccountService, private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef) {}\n\n  @Input()\n  set jhiHasAnyAuthority(value: string | string[]) {\n    this.authorities = typeof value === 'string' ? [value] : value;\n    this.updateView();\n    // Get notified each time authentication state changes.\n    this.accountService.getAuthenticationState().subscribe(identity => this.updateView());\n  }\n\n  private updateView(): void {\n    const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\n    this.viewContainerRef.clear();\n    if (hasAnyAuthority) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n"]}]}
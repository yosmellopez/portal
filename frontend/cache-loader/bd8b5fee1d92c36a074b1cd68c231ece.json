{"remainingRequest":"C:\\wamp64\\www\\portal\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\wamp64\\www\\portal\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\wamp64\\www\\portal\\frontend\\app\\mat-select-search\\mat-select-search.component.ts","dependencies":[{"path":"C:\\wamp64\\www\\portal\\frontend\\app\\mat-select-search\\mat-select-search.component.ts","mtime":1569364813441},{"path":"C:\\wamp64\\www\\portal\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"C:\\wamp64\\www\\portal\\frontend\\app\\mat-select-search\\mat-select-search.component.ts","sourceRoot":"","sources":["C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\wamp64\\www\\portal\\frontend\\app\\mat-select-search\\mat-select-search.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy, ChangeDetectorRef,\r\n    Component, ElementRef, EventEmitter, forwardRef, Inject, Input, OnDestroy, OnInit, QueryList,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MatOption, MatSelect } from '@angular/material';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'mat-select-search',\r\n    templateUrl: './mat-select-search.component.html',\r\n    styleUrls: ['./mat-select-search.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => MatSelectSearchComponent),\r\n            multi: true\r\n        }\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatSelectSearchComponent implements OnInit, OnDestroy, AfterViewInit, ControlValueAccessor {\r\n\r\n    /** Label of the search placeholder */\r\n    @Input() placeholderLabel = 'Buscar';\r\n\r\n    /** Label to be shown when no entries are found. Set to null if no message should be shown. */\r\n    @Input() noEntriesFoundLabel = 'No se encontraron elementos';\r\n\r\n    /** Reference to the search input field */\r\n    @ViewChild('searchSelectInput', {read: ElementRef, static: true}) searchSelectInput: ElementRef;\r\n\r\n    /** Current search value */\r\n    get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    private _value: string;\r\n\r\n    onChange: Function = (_: any) => {\r\n    };\r\n    onTouched: Function = (_: any) => {\r\n    };\r\n\r\n    /** Reference to the MatSelect options */\r\n    public _options: QueryList<MatOption>;\r\n\r\n    /** Previously selected values when using <mat-select [multiple]=\"true\">*/\r\n    private previousSelectedValues: any[];\r\n\r\n    /** Whether the backdrop class has been set */\r\n    private overlayClassSet = false;\r\n\r\n    /** Event that emits when the current value changes */\r\n    private change = new EventEmitter<string>();\r\n\r\n    /** Subject that emits when the component has been destroyed. */\r\n    private _onDestroy = new Subject<void>();\r\n\r\n\r\n    constructor(\r\n        @Inject(MatSelect) public matSelect: MatSelect,\r\n        private changeDetectorRef: ChangeDetectorRef) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // set custom panel class\r\n        const panelClass = 'mat-select-search-panel';\r\n        if (this.matSelect.panelClass) {\r\n            if (Array.isArray(this.matSelect.panelClass)) {\r\n                this.matSelect.panelClass.push(panelClass);\r\n            } else if (typeof this.matSelect.panelClass === 'string') {\r\n                this.matSelect.panelClass = [this.matSelect.panelClass, panelClass];\r\n            } else if (typeof this.matSelect.panelClass === 'object') {\r\n                this.matSelect.panelClass[panelClass] = true;\r\n            }\r\n        } else {\r\n            this.matSelect.panelClass = panelClass;\r\n        }\r\n\r\n        // when the select dropdown panel is opened or closed\r\n        this.matSelect.openedChange\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe((opened) => {\r\n                if (opened) {\r\n                    // focus the search field when opening\r\n                    this._focus();\r\n                } else {\r\n                    // clear it when closing\r\n                    this._reset();\r\n                }\r\n            });\r\n\r\n        // set the first item active after the options changed\r\n        this.matSelect.openedChange\r\n            .pipe(take(1))\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(() => {\r\n                this._options = this.matSelect.options;\r\n                this._options.changes\r\n                    .pipe(takeUntil(this._onDestroy))\r\n                    .subscribe(() => {\r\n                        const keyManager = this.matSelect._keyManager;\r\n                        if (keyManager && this.matSelect.panelOpen) {\r\n                            // avoid \"expression has been changed\" error\r\n                            setTimeout(() => {\r\n                                keyManager.setFirstItemActive();\r\n                            });\r\n                        }\r\n                    });\r\n            });\r\n\r\n        // detect changes when the input changes\r\n        this.change\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(() => {\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n\r\n        this.initMultipleHandling();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.setOverlayClass();\r\n    }\r\n\r\n    /**\r\n     * Handles the key down event with MatSelect.\r\n     * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\r\n     * @param {KeyboardEvent} event\r\n     * @private\r\n     */\r\n    _handleKeydown(event: KeyboardEvent) {\r\n        if (event.keyCode === 32) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n    }\r\n\r\n    writeValue(value: string) {\r\n        const valueChanged = value !== this._value;\r\n        if (valueChanged) {\r\n            this._value = value;\r\n            this.change.emit(value);\r\n        }\r\n    }\r\n\r\n    onInputChange(value) {\r\n        const valueChanged = value !== this._value;\r\n        if (valueChanged) {\r\n            this._value = value;\r\n            this.onChange(value);\r\n            this.change.emit(value);\r\n        }\r\n    }\r\n\r\n    onBlur(value: string) {\r\n        this.writeValue(value);\r\n        this.onTouched();\r\n    }\r\n\r\n    registerOnChange(fn: Function) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    /**\r\n     * Focuses the search input field\r\n     * @private\r\n     */\r\n    public _focus() {\r\n        if (!this.searchSelectInput) {\r\n            return;\r\n        }\r\n        // save and restore scrollTop of panel, since it will be reset by focus()\r\n        // note: this is hacky\r\n        const panel = this.matSelect.panel.nativeElement;\r\n        const scrollTop = panel.scrollTop;\r\n\r\n        // focus\r\n        this.searchSelectInput.nativeElement.focus();\r\n\r\n        panel.scrollTop = scrollTop;\r\n    }\r\n\r\n    /**\r\n     * Resets the current search value\r\n     * @param {boolean} focus whether to focus after resetting\r\n     * @private\r\n     */\r\n    public _reset(focus?: boolean) {\r\n        if (!this.searchSelectInput) {\r\n            return;\r\n        }\r\n        this.searchSelectInput.nativeElement.value = '';\r\n        this.onInputChange('');\r\n        if (focus) {\r\n            this._focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the overlay class  to correct offsetY\r\n     * so that the selected option is at the position of the select box when opening\r\n     */\r\n    private setOverlayClass() {\r\n        if (this.overlayClassSet) {\r\n            return;\r\n        }\r\n        const overlayClass = 'cdk-overlay-pane-select-search';\r\n\r\n        this.matSelect.overlayDir.attach\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(() => {\r\n                // note: this is hacky, but currently there is no better way to do this\r\n                this.searchSelectInput.nativeElement.parentElement.parentElement.parentElement.parentElement.parentElement.classList.add(overlayClass);\r\n            });\r\n\r\n        this.overlayClassSet = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Initializes handling <mat-select [multiple]=\"true\">\r\n     * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\r\n     */\r\n    private initMultipleHandling() {\r\n        // if <mat-select [multiple]=\"true\">\r\n        // store previously selected values and restore them when they are deselected\r\n        // because the option is not available while we are currently filtering\r\n        this.matSelect.valueChange\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe((values) => {\r\n                if (this.matSelect.multiple) {\r\n                    let restoreSelectedValues = false;\r\n                    if (this._value && this._value.length\r\n                        && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {\r\n                        if (!values || !Array.isArray(values)) {\r\n                            values = [];\r\n                        }\r\n                        const optionValues = this.matSelect.options.map(option => option.value);\r\n                        this.previousSelectedValues.forEach(previousValue => {\r\n                            if (values.indexOf(previousValue) === -1 && optionValues.indexOf(previousValue) === -1) {\r\n                                // if a value that was selected before is deselected and not found in the options, it was deselected\r\n                                // due to the filtering, so we restore it.\r\n                                values.push(previousValue);\r\n                                restoreSelectedValues = true;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (restoreSelectedValues) {\r\n                        this.matSelect._onChange(values);\r\n                    }\r\n\r\n                    this.previousSelectedValues = values;\r\n                }\r\n            });\r\n    }\r\n\r\n}\r\n"]}]}
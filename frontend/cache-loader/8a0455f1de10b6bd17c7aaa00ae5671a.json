{"remainingRequest":"C:\\wamp64\\www\\portal\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\wamp64\\www\\portal\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\wamp64\\www\\portal\\frontend\\app\\core\\auth\\account.service.ts","dependencies":[{"path":"C:\\wamp64\\www\\portal\\frontend\\app\\core\\auth\\account.service.ts","mtime":1569967463048},{"path":"C:\\wamp64\\www\\portal\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2E7DQppbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7DQppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOw0KaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnOw0KaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7DQpsZXQgQWNjb3VudFNlcnZpY2UgPSBjbGFzcyBBY2NvdW50U2VydmljZSB7DQogICAgY29uc3RydWN0b3IoaHR0cCkgew0KICAgICAgICB0aGlzLmh0dHAgPSBodHRwOw0KICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZWQgPSBmYWxzZTsNCiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlID0gbmV3IFN1YmplY3QoKTsNCiAgICB9DQogICAgZmV0Y2goKSB7DQogICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hY2NvdW50JywgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOw0KICAgIH0NCiAgICBzYXZlKGFjY291bnQpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hY2NvdW50JywgYWNjb3VudCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOw0KICAgIH0NCiAgICBhdXRoZW50aWNhdGUoaWRlbnRpdHkpIHsNCiAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBpZGVudGl0eTsNCiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gaWRlbnRpdHkgIT09IG51bGw7DQogICAgICAgIHRoaXMuYXV0aGVudGljYXRpb25TdGF0ZS5uZXh0KHRoaXMudXNlcklkZW50aXR5KTsNCiAgICB9DQogICAgaGFzQW55QXV0aG9yaXR5KGF1dGhvcml0aWVzKSB7DQogICAgICAgIGlmICghdGhpcy5hdXRoZW50aWNhdGVkIHx8ICF0aGlzLnVzZXJJZGVudGl0eSB8fCAhdGhpcy51c2VySWRlbnRpdHkucm9sKSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIGF1dGhvcml0aWVzLmluY2x1ZGVzKHRoaXMudXNlcklkZW50aXR5LnJvbC5yb2xlKTsNCiAgICB9DQogICAgaGFzQXV0aG9yaXR5KGF1dGhvcml0eSkgew0KICAgICAgICBpZiAoIXRoaXMuYXV0aGVudGljYXRlZCkgew0KICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmYWxzZSk7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpdHkoKS50aGVuKGFjY291bnQgPT4gew0KICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShhY2NvdW50LnJvbCAmJiBhY2NvdW50LnJvbC5yb2xlID09PSBhdXRob3JpdHkpOw0KICAgICAgICB9LCAoKSA9PiB7DQogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZhbHNlKTsNCiAgICAgICAgfSk7DQogICAgfQ0KICAgIGlkZW50aXR5KGZvcmNlKSB7DQogICAgICAgIGlmIChmb3JjZSkgew0KICAgICAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSB1bmRlZmluZWQ7DQogICAgICAgIH0NCiAgICAgICAgLy8gY2hlY2sgYW5kIHNlZSBpZiB3ZSBoYXZlIHJldHJpZXZlZCB0aGUgdXNlcklkZW50aXR5IGRhdGEgZnJvbSB0aGUgc2VydmVyLg0KICAgICAgICAvLyBpZiB3ZSBoYXZlLCByZXVzZSBpdCBieSBpbW1lZGlhdGVseSByZXNvbHZpbmcNCiAgICAgICAgaWYgKHRoaXMudXNlcklkZW50aXR5KSB7DQogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMudXNlcklkZW50aXR5KTsNCiAgICAgICAgfQ0KICAgICAgICAvLyByZXRyaWV2ZSB0aGUgdXNlcklkZW50aXR5IGRhdGEgZnJvbSB0aGUgc2VydmVyLCB1cGRhdGUgdGhlIGlkZW50aXR5IG9iamVjdCwgYW5kIHRoZW4gcmVzb2x2ZS4NCiAgICAgICAgcmV0dXJuIHRoaXMuZmV0Y2goKQ0KICAgICAgICAgICAgLnRvUHJvbWlzZSgpDQogICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgICBjb25zdCBhY2NvdW50ID0gcmVzcG9uc2UuYm9keTsNCiAgICAgICAgICAgIGlmIChhY2NvdW50KSB7DQogICAgICAgICAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBhY2NvdW50Ow0KICAgICAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlZCA9IHRydWU7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLnVzZXJJZGVudGl0eSA9IG51bGw7DQogICAgICAgICAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBjb25zb2xlLmxvZyhhY2NvdW50KTsNCiAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRpb25TdGF0ZS5uZXh0KHRoaXMudXNlcklkZW50aXR5KTsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLnVzZXJJZGVudGl0eTsNCiAgICAgICAgfSkNCiAgICAgICAgICAgIC5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBudWxsOw0KICAgICAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gZmFsc2U7DQogICAgICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUubmV4dCh0aGlzLnVzZXJJZGVudGl0eSk7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSk7DQogICAgfQ0KICAgIGlzQXV0aGVudGljYXRlZCgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRlZDsNCiAgICB9DQogICAgaXNJZGVudGl0eVJlc29sdmVkKCkgew0KICAgICAgICByZXR1cm4gdGhpcy51c2VySWRlbnRpdHkgIT09IHVuZGVmaW5lZDsNCiAgICB9DQogICAgZ2V0QXV0aGVudGljYXRpb25TdGF0ZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRpb25TdGF0ZS5hc09ic2VydmFibGUoKTsNCiAgICB9DQogICAgZ2V0SW1hZ2VVcmwoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmlzSWRlbnRpdHlSZXNvbHZlZCgpID8gdGhpcy51c2VySWRlbnRpdHkuaW1hZ2VVcmwgOiBudWxsOw0KICAgIH0NCn07DQpBY2NvdW50U2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbDQogICAgSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwNCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pDQpdLCBBY2NvdW50U2VydmljZSk7DQpleHBvcnQgeyBBY2NvdW50U2VydmljZSB9Ow0K"},{"version":3,"file":"C:\\wamp64\\www\\portal\\frontend\\app\\core\\auth\\account.service.ts","sourceRoot":"","sources":["C:\\wamp64\\www\\portal\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\wamp64\\www\\portal\\frontend\\app\\core\\auth\\account.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Account } from 'app/core/user/account.model';\n\n@Injectable({providedIn: 'root'})\nexport class AccountService {\n    private userIdentity: Account;\n    private authenticated = false;\n    private authenticationState = new Subject<any>();\n\n    constructor(private http: HttpClient) {\n    }\n\n    fetch(): Observable<HttpResponse<Account>> {\n        return this.http.get<Account>(SERVER_API_URL + 'api/account', {observe: 'response'});\n    }\n\n    save(account: any): Observable<HttpResponse<any>> {\n        return this.http.post(SERVER_API_URL + 'api/account', account, {observe: 'response'});\n    }\n\n    authenticate(identity) {\n        this.userIdentity = identity;\n        this.authenticated = identity !== null;\n        this.authenticationState.next(this.userIdentity);\n    }\n\n    hasAnyAuthority(authorities: string[]): boolean {\n        if (!this.authenticated || !this.userIdentity || !this.userIdentity.rol) {\n            return false;\n        }\n        return authorities.includes(this.userIdentity.rol.role);\n    }\n\n    hasAuthority(authority: string): Promise<boolean> {\n        if (!this.authenticated) {\n            return Promise.resolve(false);\n        }\n        return this.identity().then(\n            account => {\n                return Promise.resolve(account.rol && account.rol.role === authority);\n            },\n            () => {\n                return Promise.resolve(false);\n            }\n        );\n    }\n\n    identity(force?: boolean): Promise<Account> {\n        if (force) {\n            this.userIdentity = undefined;\n        }\n\n        // check and see if we have retrieved the userIdentity data from the server.\n        // if we have, reuse it by immediately resolving\n        if (this.userIdentity) {\n            return Promise.resolve(this.userIdentity);\n        }\n\n        // retrieve the userIdentity data from the server, update the identity object, and then resolve.\n        return this.fetch()\n            .toPromise()\n            .then(response => {\n                const account: Account = response.body;\n                if (account) {\n                    this.userIdentity = account;\n                    this.authenticated = true;\n                } else {\n                    this.userIdentity = null;\n                    this.authenticated = false;\n                }\n                console.log(account);\n                this.authenticationState.next(this.userIdentity);\n                return this.userIdentity;\n            })\n            .catch(err => {\n                this.userIdentity = null;\n                this.authenticated = false;\n                this.authenticationState.next(this.userIdentity);\n                return null;\n            });\n    }\n\n    isAuthenticated(): boolean {\n        return this.authenticated;\n    }\n\n    isIdentityResolved(): boolean {\n        return this.userIdentity !== undefined;\n    }\n\n    getAuthenticationState(): Observable<any> {\n        return this.authenticationState.asObservable();\n    }\n\n    getImageUrl(): string {\n        return this.isIdentityResolved() ? this.userIdentity.imageUrl : null;\n    }\n}\n"]}]}